package week4

import .app

abstract class Nat {
  def isZero: Boolean
  def predecessor: Nat
  def successor: Nat
  def + (that: Nat): Nat
  def - (that: Nat): Nat
}

class Succ(n: Nat) extends Nat {
	def isZero = false
	def predecessor = n
	def successor = Succ(this)
	def + (that: Nat) = null
  def - (that: Nat) = null
}

class Zero extends Nat {
	def isZero = true
	def predecessor = throw new NoSuchElementException("predecessor of zero")
	def successor = Succ(Zero)
	def + (that: Nat) = null
	def - (that: Nat) = null
}

object main extends app {
	
}